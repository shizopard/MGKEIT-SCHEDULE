import telebot
from telebot import types
import datetime
import json
import pytz  

moscow_tz = pytz.timezone('Europe/Moscow')
bot = telebot.TeleBot(' ')

# JSON
def read_json_file(filename):
    try:
        with open(filename, 'r', encoding='utf-8') as file:
            data = json.load(file)
        return data
    except FileNotFoundError:
        print(f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None
    except json.JSONDecodeError:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ JSON –≤ —Ñ–∞–π–ª–µ {filename}.")
        return None

def get_moscow_time():
    return datetime.datetime.now(moscow_tz)

nowDay = get_moscow_time().weekday()
days_of_week = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
nowDay = days_of_week[nowDay]

# –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
nextDay = "none"
if nowDay == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
    nextDay = "–í—Ç–æ—Ä–Ω–∏–∫"
elif nowDay == "–í—Ç–æ—Ä–Ω–∏–∫":
    nextDay = "–°—Ä–µ–¥–∞"
elif nowDay == "–°—Ä–µ–¥–∞":
    nextDay = "–ß–µ—Ç–≤–µ—Ä–≥"
elif nowDay == "–ß–µ—Ç–≤–µ—Ä–≥":
    nextDay = "–ü—è—Ç–Ω–∏—Ü–∞"
elif nowDay == "–ü—è—Ç–Ω–∏—Ü–∞":
    nextDay = "–°—É–±–±–æ—Ç–∞"
elif nowDay == "–°—É–±–±–æ—Ç–∞":
    nextDay = "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
elif nowDay == "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":
    nextDay = "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"

current_date = get_moscow_time()
week_number = current_date.isocalendar()[1]
if week_number % 2 == 0:
    nowParity = "–ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è"
else:
    nowParity = "–ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è"


@bot.message_handler(content_types=['text'])
def get_text_messages(message):


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥

    def backMenu():
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        relist = types.KeyboardButton("üóìÔ∏è –ó–∞–º–µ–Ω—ã")
        list = types.KeyboardButton("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        help = types.KeyboardButton("‚ö†Ô∏è –ü–æ–º–æ—â—å")
        settings = types.KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        resources = types.KeyboardButton("üåê –†–µ—Å—É—Ä—Å—ã")
        keyboard.add(relist, list, help, resources, settings)
        bot.send_message(message.chat.id, f"""
{message.from_user.username}, –ü—Ä–∏–≤–µ—Ç! –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –±–æ—Ç—É:
üóìÔ∏è –ó–∞–º–µ–Ω—ã - —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ–Ω
üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
‚ö†Ô∏è –ü–æ–º–æ—â—å - –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É
‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞

üîî –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
""", reply_markup=keyboard)
        print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start")
        

    def sendNotifi(notificationMessage):
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª JSON –¥–ª—è —á—Ç–µ–Ω–∏—è
        with open("users.json", "r") as file:
            data = json.load(file)  # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
            users = data.get("notifications", [])  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            for user in users:
                user_id = user.get("uID")
                message_text = notificationMessage
                bot.send_message(user_id, message_text)
# –ö–æ–º–∞–Ω–¥—ã


    if message.text == "/getid":
        bot.send_message(message.chat.id, f"{message.from_user.username}, ID —á–∞—Ç–∞: {message.chat.id}")
        print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /getid")

    elif message.text == "/qbezka":
        sendNotifi(notificationMessage="üîî –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–∞—Ö –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –±–æ—Ç—É –≤ –ª–∏—á–∫—É (—Å—é–¥–∞): t.me/mgkeitIP_bot")

    if message.chat.id < 0:
        bot.send_message(message.chat.id, "üò¢ –ë–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö\n–†–∞–±–æ—Ç–∞ —Å –±–æ—Ç–æ–º –≤ –ª–∏—á–∫–µ: @mgkeitIP_bot")

    else:

        if message.text == "/start":
            backMenu()

        elif message.text == "üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            today = types.KeyboardButton("üìÖ –°–µ–≥–æ–¥–Ω—è")
            nextday = types.KeyboardButton("‚û°Ô∏è –ó–∞–≤—Ç—Ä–∞")
            skipList = types.KeyboardButton("")
            backList = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            keyboard.add(today, nextday, skipList, backList)
            bot.send_message(message.chat.id, f"{message.from_user.username}, –≤—ã–±–µ—Ä–∏ –¥–∞—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", reply_markup=keyboard)

        elif message.text == "üìÖ –°–µ–≥–æ–¥–Ω—è":
            filename = "couples.json"
            parsed_data = read_json_file(filename)
            if parsed_data:
                try:
                    monday_schedule = parsed_data[nowParity][nowDay]
                    text_schedule = ""
                    for key, value in monday_schedule.items():
                        text_schedule += f"{key}: {value}\n"
                    bot.send_message(message.chat.id, f"{message.from_user.username}, –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {nowDay} ({nowParity}):\n\n{text_schedule}")
                    print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                except KeyError:
                    print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ó–∞–º–µ–Ω—ã")
                    print(f"[{datetime.datetime.now()}] –î–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ –¥–µ–Ω—å –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞")

        elif message.text == "‚û°Ô∏è –ó–∞–≤—Ç—Ä–∞":
            filename = "couples.json"
            parsed_data = read_json_file(filename)
            if parsed_data:
                try:
                    monday_schedule = parsed_data[nowParity][nextDay]
                    text_schedule = ""
                    for key, value in monday_schedule.items():
                        text_schedule += f"{key}: {value}\n"
                    bot.send_message(message.chat.id, f"{message.from_user.username}, –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {nextDay} ({nowParity}):\n\n{text_schedule}")
                    print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                except KeyError:
                    print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ó–∞–º–µ–Ω—ã")
                    print(f"[{datetime.datetime.now()}] –î–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–∞ –¥–µ–Ω—å –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞")

        elif message.text == "üîô –ù–∞–∑–∞–¥":
            backMenu()

        elif message.text == "üóìÔ∏è –ó–∞–º–µ–Ω—ã":
            bot.send_message(message.chat.id, f"{message.from_user.username}, –°–ø–∏—Å–æ–∫ –∑–∞–º–µ–Ω –Ω–∞ {nowDay}:\n- –°–µ–≥–æ–¥–Ω—è –∑–∞–º–µ–Ω –Ω–µ—Ç")
            print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ó–∞–º–µ–Ω—ã")

        elif message.text == "‚ö†Ô∏è –ü–æ–º–æ—â—å":
            bot.send_message(message.chat.id, f"{message.from_user.username}, –ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã 1–ò–ü-4-23\n–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:\n- –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–º–µ–Ω –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.\n- –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –¥–µ–Ω—å.")
            print(f"[{datetime.datetime.now()}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username}[id: {message.from_user.id}] –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É –ü–æ–º–æ—â—å")

        elif message.text == "üåê –†–µ—Å—É—Ä—Å—ã":
            bot.send_message(message.chat.id, f"{message.from_user.username}, —Ä–µ—Å—É—Ä—Å—ã:\n- –ù–∞–≤–∏–≥–∞—Ç–æ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞: sites.google.com/view/mgkeitstudent/\n- –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: vk.com/mgkeit1\n- –¢–µ–ª–µ–≥—Ä–∞–º: t.me/mgkeit\n- –†–∞–±–æ—Ç–∞ –æ—Ç –ú–ì–ö–≠–ò–¢: t.me/VacanciMGKEIT\n\n–°–≤—è–∑—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: @shzpard")
        
        elif message.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            notifiOn = types.KeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (ON)")
            notifiOff = types.KeyboardButton("üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (OFF)")
            skipList = types.KeyboardButton("")
            backList = types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            keyboard.add(notifiOn, notifiOff, skipList, backList)
            bot.send_message(message.chat.id, f"üîî –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏", reply_markup=keyboard)  

        elif message.text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (ON)":
            user_id = message.from_user.id
            user_data = {"uID": user_id}
            with open("users.json", "r+") as file:
                data = json.load(file)
                users = data.get("notifications", [])

                if user_id not in [user.get("uID") for user in users]:
                    users.append(user_data)
                    data["notifications"] = users
                    file.seek(0)
                    json.dump(data, file, indent=4)
                    file.truncate()
                    bot.send_message(message.chat.id, "üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞")

        elif message.text == "üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (OFF)":
            with open("users.json", "r+") as file:
                user_id = message.from_user.id
                data = json.load(file)
                users = data.get("notifications", [])
                if user_id in [user.get("uID") for user in users]:
                    users = [user for user in users if user.get("uID") != user_id] 
                    data["notifications"] = users 
                    file.seek(0)
                    json.dump(data, file, indent=4)
                    file.truncate()
                    bot.send_message(message.chat.id, "üîï –¢—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!")




bot.polling(none_stop=True, interval=0)
